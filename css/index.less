@width: 100px;
@colorBrown: #dda377;
@colorBlue: #86e8ff;
@colorGreen: #80d640;
@colorWhite: #fff;
* {
    margin: 0;
    padding: 0;
    list-style: none;
}
.footer,
.header {
    width: 100%;
    font-family: cursive;
    color: @colorWhite;
    text-align: center;
    background-color: #eee;
}
.content {
    width: 100%;
    background-color: @colorWhite;
}
/*navigation begin*/
.nav {
    display: -webkit-flex;
    padding: 10px;
    overflow: hidden;
    background-color: #99cfc2;
    li {
        flex: 1;
        padding: 0 5px;
        color: #555;
        border-left: 1px dotted #555;
    }
    li:first-child {
        border: none;
    }
}
/* list begin*/
.list {
    overflow: hidden;
    li {
        display: -webkit-flex;
        width: 100%;
        border: 1px solid #999;
        padding: 5px;
    }
    img {
        display: inline-block;
        width: @width;
        height: 100px;
    }
}
.desc {
    display: inline-block;
    float: left;
    flex: 1;
    padding: 5px;
    font-size: 14px;
}
/*unsure begin*/
/*method one*/
.unsure {
    background-color: #99cfc2;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%,-50%);
    z-index: 3;
    border-radius: 6px;
    border: 1px solid #333;
    font-size: 10px;
    padding: 10px;
    box-shadow: 0 0 3em gold;
}
/*method two*/
/*.content {
   justify-content: center;
   align-items: center;
   display: -webkit-flex;
}*/
/*flex test begin*/
.flex-tests {
    p {
        margin-top: 10px;
        font-size: 10px;
        &::before {
            content: "- ";
        }
    }
}
/* 父容器属性 */
/* flex 只兼容 Android4.4+ & ios，旧版本要使用 flex-box*/
.flex-tests{
  &> div {
    display: -webkit-flex;
    /*old: display: -webkit-flex-box;*/
    border: 1px solid #000;
    margin: 5px 0;
    font-size: 14px;
    /*default >> 6 props*/
    /*
    flex-direction: row;
    flex-wrap: no-wrap;
    flex-flow: row no-wrap;
    //主轴上的对齐方式，可取值 flex-start | flex-end | center | space-between | space-around
    justify-content: flex-start;
    // old: box-pack: flex-start;
    //交叉轴上对齐方式，可取值 flex-start | flex-end | center | baseline | stretch
    align-items: flex-start;
    // old: box-align: flex-start;
    // 以上两者的简写
    align-content: flex-start flex-start;
    */
  }
  .flex-test2 {
    flex-direction: row-reverse;
  }
  .flex-test3 {
    height: 60px;
    flex-direction: column;
  }
  .flex-test4 {
    justify-content: center;
  }
  .flex-test5 {
    justify-content: space-between;
  }
  .flex-test6 {
    justify-content: space-around;
  }
  .flex-test7 {
    align-items: baseline;
  }
  .flex-test8 {
    flex-direction: column;
  }

  }
// funtion
.flexColor(@flex, @color) {
    flex: @flex;
    background-color: @color;
}
/* 子项目属性 */
.flex1 {
    .flexColor(1, @colorBrown);
    /*default >> 6 props*/
    /*
  // 放大比例
  flex-grow: 0;
  // 缩小比例
  flex-shrink: 0;
  // 分配多余空间前，项目占据的主轴空间
  flex-basis: auto;
  // 以上三个的简写
  flex: 0 0 auto;
  // old: flex-box: 0 0 auto;
  // 排序
  order: 0;
  // 在主轴/交叉轴上的对齐方式，哪个轴由父容器决定
  align-self: auto;
  */
}
.flex2 {
    .flexColor(2, @colorBlue);
}
.flex3 {
    .flexColor(3, @colorGreen);
}
// funtion
.widColor(@width, @color) {
    width: @width;
    background-color: @color;
}
.flex1-1 {
    .widColor(@width, @colorBrown);
}
.flex1-2 {
    .widColor(@width, @colorBlue);
}
.flex1-3 {
    .widColor(@width, @colorGreen);
}
// funtion
.ordColor(@order, @color, @align) {
    order: @order;
    background-color: @color;
    align-self: @align;
}
.order1 {
    .ordColor(1, @colorBrown, flex-start);
}
.order2 {
    .ordColor(2, @colorBlue, center);
}
.order3 {
    .ordColor(3, @colorGreen, flex-end);
}
.order4 {
    .ordColor(4, @colorBrown, auto);
}
.order5 {
    .ordColor(5, @colorBlue, baseline);
}
.order6 {
    .ordColor(6, @colorGreen, stretch);
}
.fs10 {
    font-size: 10px;
}
.fs15 {
    font-size: 15px;
}
.fs20 {
    font-size: 20px;
}
